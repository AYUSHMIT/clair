/*
 * This code was generated by openai's chat-gpt on Wed Apr 26, 2023 on the following prompt:
 *
 * > I need the code for a simple phonebook database written from scratch in C++, in object-oriented style. 
 * > Could you generate that?
 */
#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Contact {
public:
    Contact(string name, string phoneNumber) {
        this->name = name;
        this->phoneNumber = phoneNumber;
    }
    string getName() {
        return name;
    }
    string getPhoneNumber() {
        return phoneNumber;
    }
private:
    string name;
    string phoneNumber;
};

class Phonebook {
public:
    void addContact(Contact contact) {
        contacts.push_back(contact);
    }
    vector<Contact> searchByName(string name) {
        vector<Contact> matchingContacts;
        for (int i = 0; i < contacts.size(); i++) {
            if (contacts[i].getName() == name) {
                matchingContacts.push_back(contacts[i]);
            }
        }
        return matchingContacts;
    }
    vector<Contact> searchByPhoneNumber(string phoneNumber) {
        vector<Contact> matchingContacts;
        for (int i = 0; i < contacts.size(); i++) {
            if (contacts[i].getPhoneNumber() == phoneNumber) {
                matchingContacts.push_back(contacts[i]);
            }
        }
        return matchingContacts;
    }
private:
    vector<Contact> contacts;
};

int main() {
    Phonebook phonebook;
    phonebook.addContact(Contact("John Smith", "555-1234"));
    phonebook.addContact(Contact("Jane Doe", "555-5678"));
    phonebook.addContact(Contact("Bob Johnson", "555-9012"));

    vector<Contact> matchingContacts = phonebook.searchByName("Jane Doe");
    for (int i = 0; i < matchingContacts.size(); i++) {
        cout << matchingContacts[i].getName() << " " << matchingContacts[i].getPhoneNumber() << endl;
    }

    matchingContacts = phonebook.searchByPhoneNumber("555-9012");
    for (int i = 0; i < matchingContacts.size(); i++) {
        cout << matchingContacts[i].getName() << " " << matchingContacts[i].getPhoneNumber() << endl;
    }

    return 0;
}
